/* Copyright 2014 Mozilla Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 :root {
  --sidebar-width: 200px;
  --sidebar-transition-duration: 200ms;
  --sidebar-transition-timing-function: ease;
  --scale-select-container-width: 140px;
  --scale-select-overflow: 22px;
  --loadingBar-end-offset: 0;

  --toolbar-icon-opacity: 1;
  --doorhanger-icon-opacity: 0.9;
 }

 .textLayer {
    position: absolute;
    text-align: initial;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    overflow: hidden;
    opacity: 0.2;
    line-height: 1;
  }
  
  .textLayer span,
  .textLayer br {
    color: transparent;
    position: absolute;
    white-space: pre;
    cursor: text;
    transform-origin: 0% 0%;
  }
  
  .textLayer .highlight {
    margin: -1px;
    padding: 1px;
    background-color: rgba(180, 0, 170, 1);
    border-radius: 4px;
  }

  .textLayer .highlight.appended {
    position: initial;
  }
  
  .textLayer .highlight.begin {
    border-radius: 4px 0 0 4px;
  }
  
  .textLayer .highlight.end {
    border-radius: 0 4px 4px 0;
  }
  
  .textLayer .highlight.middle {
    border-radius: 0;
  }
  
  .textLayer .highlight.selected {
    background-color: rgba(0, 100, 0, 1);
  }
  
  .textLayer ::-moz-selection {
    background: rgba(0, 0, 255, 1);
  }
  
  .textLayer ::selection {
    background: rgba(0, 0, 255, 1);
  }

  /* Avoids https://github.com/mozilla/pdf.js/issues/13840 in Chrome */
  .textLayer br::-moz-selection {
    background: transparent;
  }
  .textLayer br::selection {
    background: transparent;
  }
  
  .textLayer .endOfContent {
    display: block;
    position: absolute;
    left: 0;
    top: 100%;
    right: 0;
    bottom: 0;
    z-index: -1;
    cursor: default;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
  }
  
  .textLayer .endOfContent.active {
    top: 0;
  }
  
  
  :root {
    --annotation-unfocused-field-background: url("data:image/svg+xml;charset=UTF-8,<svg width='1px' height='1px' xmlns='http://www.w3.org/2000/svg'><rect width='100%' height='100%' style='fill:rgba(0, 54, 255, 0.13);'/></svg>");
  }
  
  .annotationLayer section {
    position: absolute;
    text-align: initial;
  }

  .annotationLayer .linkAnnotation > a,
  .annotationLayer .buttonWidgetAnnotation.pushButton > a {
    position: absolute;
    font-size: 1em;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  
  .annotationLayer .linkAnnotation > a:hover,
  .annotationLayer .buttonWidgetAnnotation.pushButton > a:hover {
    opacity: 0.2;
    background: rgba(255, 255, 0, 1);
    box-shadow: 0 2px 10px rgba(255, 255, 0, 1);
  }
  
  .annotationLayer .textAnnotation img {
    position: absolute;
    cursor: pointer;
  }
  
  .annotationLayer .textWidgetAnnotation input,
  .annotationLayer .textWidgetAnnotation textarea,
  .annotationLayer .choiceWidgetAnnotation select,
  .annotationLayer .buttonWidgetAnnotation.checkBox input,
  .annotationLayer .buttonWidgetAnnotation.radioButton input {
    background-image: var(--annotation-unfocused-field-background);
    border: 1px solid transparent;
    box-sizing: border-box;
    font-size: 9px;
    height: 100%;
    margin: 0;
    padding: 0 3px;
    vertical-align: top;
    width: 100%;
  }

  .annotationLayer .choiceWidgetAnnotation select option {
    padding: 0;
  }
  
  .annotationLayer .buttonWidgetAnnotation.radioButton input {
    border-radius: 50%;
  }
  
  .annotationLayer .textWidgetAnnotation textarea {
    font: message-box;
    font-size: 9px;
    resize: none;
  }
  
  .annotationLayer .textWidgetAnnotation input[disabled],
  .annotationLayer .textWidgetAnnotation textarea[disabled],
  .annotationLayer .choiceWidgetAnnotation select[disabled],
  .annotationLayer .buttonWidgetAnnotation.checkBox input[disabled],
  .annotationLayer .buttonWidgetAnnotation.radioButton input[disabled] {
    background: none;
    border: 1px solid transparent;
    cursor: not-allowed;
  }
  
  .annotationLayer .textWidgetAnnotation input:hover,
  .annotationLayer .textWidgetAnnotation textarea:hover,
  .annotationLayer .choiceWidgetAnnotation select:hover,
  .annotationLayer .buttonWidgetAnnotation.checkBox input:hover,
  .annotationLayer .buttonWidgetAnnotation.radioButton input:hover {
    border: 1px solid rgba(0, 0, 0, 1);
  }
  
  .annotationLayer .textWidgetAnnotation input:focus,
  .annotationLayer .textWidgetAnnotation textarea:focus,
  .annotationLayer .choiceWidgetAnnotation select:focus {
    background: none;
    border: 1px solid transparent;
  }

  .annotationLayer .textWidgetAnnotation input :focus,
  .annotationLayer .textWidgetAnnotation textarea :focus,
  .annotationLayer .choiceWidgetAnnotation select :focus,
  .annotationLayer .buttonWidgetAnnotation.checkBox :focus,
  .annotationLayer .buttonWidgetAnnotation.radioButton :focus {
    background-image: none;
    background-color: transparent;
    outline: auto;
  }
  
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:before,
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:after,
  .annotationLayer .buttonWidgetAnnotation.radioButton input:checked:before {
    background-color: rgba(0, 0, 0, 1);
    content: "";
    display: block;
    position: absolute;
  }
  
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:before,
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:after {
    height: 80%;
    left: 45%;
    width: 1px;
  }
  
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:before {
    transform: rotate(45deg);
  }
  
  .annotationLayer .buttonWidgetAnnotation.checkBox input:checked:after {
    transform: rotate(-45deg);
  }
  
  .annotationLayer .buttonWidgetAnnotation.radioButton input:checked:before {
    border-radius: 50%;
    height: 50%;
    left: 30%;
    top: 20%;
    width: 50%;
  }

  .annotationLayer .textWidgetAnnotation input.comb {
    font-family: monospace;
    padding-left: 2px;
    padding-right: 0;
  }
  
  .annotationLayer .buttonWidgetAnnotation.checkBox input,
  .annotationLayer .buttonWidgetAnnotation.radioButton input {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    padding: 0;
  }
  
  .annotationLayer .popupWrapper {
    position: absolute;
    width: 20em;
  }
  
  .annotationLayer .popup {
    position: absolute;
    z-index: 200;
    max-width: 20em;
    background-color: rgba(255, 255, 153, 1);
    box-shadow: 0 2px 5px rgba(136, 136, 136, 1);
    border-radius: 2px;
    padding: 6px;
    margin-left: 5px;
    cursor: pointer;
    font: message-box;
    font-size: 9px;
    white-space: normal;
    word-wrap: break-word;
  }
  
  .annotationLayer .popup > * {
    font-size: 9px;
  }
  
  .annotationLayer .popup h1 {
    display: inline-block;
  }

  .annotationLayer .popup span {
    display: inline-block;
    margin-left: 5px;
  }

  .annotationLayer .popup p {
    border-top: 1px solid rgba(51, 51, 51, 1);
    margin-top: 2px;
    padding-top: 2px;
  }

  .annotationLayer .highlightAnnotation,
  .annotationLayer .underlineAnnotation,
  .annotationLayer .squigglyAnnotation,
  .annotationLayer .strikeoutAnnotation,
  .annotationLayer .freeTextAnnotation,
  .annotationLayer .lineAnnotation svg line,
  .annotationLayer .squareAnnotation svg rect,
  .annotationLayer .circleAnnotation svg ellipse,
  .annotationLayer .polylineAnnotation svg polyline,
  .annotationLayer .polygonAnnotation svg polygon,
  .annotationLayer .caretAnnotation,
  .annotationLayer .inkAnnotation svg polyline,
  .annotationLayer .stampAnnotation,
  .annotationLayer .fileAttachmentAnnotation {
    cursor: pointer;
  }


  :root {
    --xfa-unfocused-field-background: url("data:image/svg+xml;charset=UTF-8,<svg width='1px' height='1px' xmlns='http://www.w3.org/2000/svg'><rect width='100%' height='100%' style='fill:rgba(0, 54, 255, 0.13);'/></svg>");
  }

  .xfaLayer .highlight {
    margin: -1px;
    padding: 1px;
    background-color: rgba(239, 203, 237, 1);
    border-radius: 4px;
  }

  .xfaLayer .highlight.appended {
    position: initial;
  }
  
  .xfaLayer .highlight.begin {
    border-radius: 4px 0 0 4px;
  }
  
  .xfaLayer .highlight.end {
    border-radius: 0 4px 4px 0;
  }
  
  .xfaLayer .highlight.middle {
    border-radius: 0;
  }
  
  .xfaLayer .highlight.selected {
    background-color: rgba(203, 223, 203, 1);
  }
  
  .xfaLayer ::-moz-selection {
    background: rgba(0, 0, 255, 1);
  }
  
  .xfaLayer ::selection {
    background: rgba(0, 0, 255, 1);
  }
  
  .xfaPage {
    overflow: hidden;
    position: relative;
  }
  
  .xfaContentarea {
    position: absolute;
  }
  
  .xfaPrintOnly {
    display: none;
  }

  .xfaLayer {
    position: absolute;
    text-align: initial;
    top: 0;
    left: 0;
    transform-origin: 0 0;
    line-height: 1.2;
  }
  
  .xfaLayer * {
    color: inherit;
    font: inherit;
    font-style: inherit;
    font-weight: inherit;
    font-kerning: inherit;
    letter-spacing: -0.01px;
    text-align: inherit;
    text-decoration: inherit;
    box-sizing: border-box;
    background-color: transparent;
    padding: 0;
    margin: 0;
    pointer-events: auto;
    line-height: inherit;
  }
  
  .xfaLayer div {
    pointer-events: none;
  }
  
  .xfaLayer svg {
    pointer-events: none;
  }
  
  .xfaLayer svg * {
    pointer-events: none;
  }
  
  .xfaLayer a {
    color: blue;
  }

  .xfaRich li {
    margin-left: 3em;
  }
  
  .xfaFont {
    color: black;
    font-weight: normal;
    font-kerning: none;
    font-size: 10px;
    font-style: normal;
    letter-spacing: 0;
    text-decoration: none;
    vertical-align: 0;
  }
  
  .xfaCaption {
    overflow: hidden;
    flex: 0 0 auto;
  }
  
  .xfaCaptionForCheckButton {
    overflow: hidden;
    flex: 1 1 auto;
  }
  
  .xfaLabel {
    height: 100%;
    width: 100%;
  }
  
  .xfaLeft {
    display: flex;
    flex-direction: row;
    align-items: center;
  }
  
  .xfaRight {
    display: flex;
    flex-direction: row-reverse;
    align-items: center;
  }

  .xfaLeft > .xfaCaption,
  .xfaLeft > .xfaCaptionForCheckButton,
  .xfaRight > .xfaCaption,
  .xfaRight > .xfaCaptionForCheckButton {
    max-height: 100%;
  }
  
  .xfaTop {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }
  
  .xfaBottom {
    display: flex;
    flex-direction: column-reverse;
    align-items: flex-start;
  }
  
  .xfaTop > .xfaCaption,
  .xfaTop > .xfaCaptionForCheckButton,
  .xfaBottom > .xfaCaption,
  .xfaBottom > .xfaCaptionForCheckButton {
    width: 100%;
  }
  
  .xfaBorder {
    background-color: transparent;
    position: absolute;
    pointer-events: none;
  }
  
  .xfaWrapped {
    width: 100%;
    height: 100%;
  }
  
  .xfaTextfield:focus,
  .xfaSelect:focus {
    background-image: none;
    background-color: transparent;
    outline: auto;
    outline-offset: -1px;
  }
  
  .xfaCheckbox:focus,
  .xfaRadio:focus {
    outline: auto;
  }
  
  .xfaTextfield,
  .xfaSelect {
    height: 100%;
    width: 100%;
    flex: 1 1 auto;
    border: none;
    resize: none;
    background-image: var(--xfa-unfocused-field-background);
  }
  
  .xfaTop > .xfaTextfield,
  .xfaTop > .xfaSelect,
  .xfaBottom > .xfaTextfield,
  .xfaBottom > .xfaSelect {
    flex: 0 1 auto;
  }
  
  .xfaButton {
    cursor: pointer;
    width: 100%;
    height: 100%;
    border: none;
    text-align: center;
  }
  
  .xfaLink {
    width: 100%;
    height: 100%;
  }
  
  .xfaCheckbox,
  .xfaRadio {
    width: 100%;
    height: 100%;
    flex: 0 0 auto;
    border: none;
  }
  
  .xfaRich {
    white-space: pre-wrap;
    width: 100%;
    height: 100%;
  }
  
  .xfaImage {
    -o-object-position: left top;
       object-position: left top;
    -o-object-fit: contain;
       object-fit: contain;
    width: 100%;
    height: 100%;
  }
  
  .xfaLrTb,
  .xfaRlTb,
  .xfaTb {
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }
  
  .xfaLr {
    display: flex;
    flex-direction: row;
    align-items: stretch;
  }
  
  .xfaRl {
    display: flex;
    flex-direction: row-reverse;
    align-items: stretch;
  }
  
  .xfaTb > div {
    justify-content: left;
  }
  
  .xfaPosition {
    position: relative;
  }
  
  .xfaArea {
    position: relative;
  }
  
  .xfaValignMiddle {
    display: flex;
    align-items: center;
  }
  
  .xfaTable {
    display: flex;
    flex-direction: column;
    align-items: stretch;
  }
  
  .xfaTable .xfaRow {
    display: flex;
    flex-direction: row;
    align-items: stretch;
  }
  
  .xfaTable .xfaRlRow {
    display: flex;
    flex-direction: row-reverse;
    align-items: stretch;
    flex: 1;
  }
  
  .xfaTable .xfaRlRow > div {
    flex: 1;
  }
  
  .xfaNonInteractive input,
  .xfaNonInteractive textarea,
  .xfaDisabled input,
  .xfaDisabled textarea,
  .xfaReadOnly input,
  .xfaReadOnly textarea {
    background: initial;
  }
  
  @media print {
    .xfaTextfield,
    .xfaSelect {
      background: transparent;
    }
  
    .xfaSelect {
      -webkit-appearance: none;
         -moz-appearance: none;
              appearance: none;
      text-indent: 1px;
      text-overflow: '';
    }
  }
  
  :root {
    --pdfViewer-padding-bottom: none;
    --page-margin: 1px auto -8px;
    --page-border: 9px solid transparent;
    --spreadHorizontalWrapped-margin-LR: -3.5px;
    --zoom-factor: 1;
  }
  
  @media screen and (forced-colors: active) {
    :root {
      --pdfViewer-padding-bottom: 9px;
      --page-margin: 9px auto 0;
      --page-border: none;
      --spreadHorizontalWrapped-margin-LR: 4.5px;
    }
  }
  
  .pdfViewer {
    padding-bottom: var(--pdfViewer-padding-bottom);
  }
  
  .pdfViewer .canvasWrapper {
    overflow: hidden;
  }

  .pdfViewer .page {
    direction: ltr;
    width: 816px;
    height: 1056px;
    margin: var(--page-margin);
    position: relative;
    overflow: visible;
    border: var(--page-border);
    background-clip: content-box;
    background-color: rgba(255, 255, 255, 1);
  }
  
  .pdfViewer.removePageBorders .page {
    margin: 0 auto 10px;
    border: none;
  }
  
  .pdfViewer.singlePageView {
    display: inline-block;
  }
  
  .pdfViewer.singlePageView .page {
    margin: 0;
    border: none;
  }
  
  .pdfViewer.scrollHorizontal,
  .pdfViewer.scrollWrapped,
  .spread {
    margin-left: 3.5px;
    margin-right: 3.5px;
    text-align: center;
  }
  
  .pdfViewer.scrollHorizontal,
  .spread {
    white-space: nowrap;
  }

  .pdfViewer.removePageBorders,
  .pdfViewer.scrollHorizontal .spread,
  .pdfViewer.scrollWrapped .spread {
    margin-left: 0;
    margin-right: 0;
  }
  
  .spread .page,
  .pdfViewer.scrollHorizontal .page,
  .pdfViewer.scrollWrapped .page,
  .pdfViewer.scrollHorizontal .spread,
  .pdfViewer.scrollWrapped .spread {
    display: inline-block;
    vertical-align: middle;
  }
  
  .spread .page,
  .pdfViewer.scrollHorizontal .page,
  .pdfViewer.scrollWrapped .page {
    margin-left: var(--spreadHorizontalWrapped-margin-LR);
    margin-right: var(--spreadHorizontalWrapped-margin-LR);
  }
  
  .pdfViewer.removePageBorders .spread .page,
  .pdfViewer.removePageBorders.scrollHorizontal .page,
  .pdfViewer.removePageBorders.scrollWrapped .page {
    margin-left: 5px;
    margin-right: 5px;
  }
  
  .pdfViewer .page canvas {
    margin: 0;
    display: block;
  }
  
  .pdfViewer .page canvas[hidden] {
    display: none;
  }

  .pdfPresentationMode .pdfViewer {
    margin-left: 0;
    margin-right: 0;
  }
  
  .pdfPresentationMode .pdfViewer .page,
  .pdfPresentationMode .pdfViewer .spread {
    display: block;
  }
  
  .pdfPresentationMode .pdfViewer .page,
  .pdfPresentationMode .pdfViewer.removePageBorders .page {
    margin-left: auto;
    margin-right: auto;
  }
  
  .pdfPresentationMode:-webkit-full-screen .pdfViewer .page {
    margin-bottom: 100%;
    border: 0;
  }
  
  .pdfPresentationMode:fullscreen .pdfViewer .page {
    margin-bottom: 100%;
    border: 0;
  }



/* 
 * ================================================================================================
 * ================================================================================================
 *  Copyright 2014 Mozilla Foundation
 * :root code gose heir in indevisual file
 * ================================================================================================
 * ================================================================================================
*/


 * {
    padding: 0;
    margin: 0;
  }
  
  html {
    height: 100%;
    width: 100%;
    /* Font size is needed to make the activity bar the correct size. */
    font-size: 10px;
  }

  body {
    height: 100%;
    width: 100%;
  }

  body,
  input,
  button,
  select {
    font: message-box;
    outline: none;
  }

  .hidden {
    display: none !important;
  }
  [hidden] {
    display: none !important;
  }

  .pdfViewer.enablePermissions .textLayer span {
    -webkit-user-select: none !important;
       -moz-user-select: none !important;
            user-select: none !important;
    cursor: not-allowed;
  }

  #viewerContainer.pdfPresentationMode:-webkit-full-screen {
    top: 0;
    border-top: 2px solid rgba(0, 0, 0, 0);
    background-color: rgba(0, 0, 0, 1);
    width: 100%;
    height: 100%;
    overflow: hidden;
    cursor: none;
    -webkit-user-select: none;
            user-select: none;
  }

  #viewerContainer.pdfPresentationMode:fullscreen {
    top: 0;
    border-top: 2px solid rgba(0, 0, 0, 0);
    background-color: rgba(0, 0, 0, 1);
    width: 100%;
    height: 100%;
    overflow: hidden;
    cursor: none;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
  }

  .pdfPresentationMode:-webkit-full-screen a:not(.internalLink) {
    display: none;
  }
  
  .pdfPresentationMode:fullscreen a:not(.internalLink) {
    display: none;
  }
  
  .pdfPresentationMode:-webkit-full-screen .textLayer span {
    cursor: none;
  }
  
  .pdfPresentationMode:fullscreen .textLayer span {
    cursor: none;
  }

  /* .pdfPresentationMode.pdfPresentationModeControls > *,
  .pdfPresentationMode.pdfPresentationModeControls .textLayer span {
    cursor: default;
  } */

  #outerContainer {
    width: 100%;
    height: 100%;
    position: relative;
  }

  #sidebarContainer {
    position: absolute;
    top: 32px;
    bottom: 0;
    visibility: hidden;
    z-index: 100;
    border-top: 1px solid rgba(51, 51, 51, 1);
  }

  html[dir='ltr'] #sidebarContainer {
    transition-property: left;
  }

  #outerContainer.sidebarResizing #sidebarContainer {
    /* Improve responsiveness and avoid visual glitches when the sidebar is resized. */
    transition-duration: 0s;
    /* Prevent e.g. the thumbnails being selected when the sidebar is resized. */
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
  }

  #outerContainer.sidebarMoving #sidebarContainer,
  #outerContainer.sidebarOpen #sidebarContainer {
    visibility: visible;
  }

  html[dir="ltr"] #outerContainer.sidebarOpen #sidebarContainer {
    left: 0;
  }
  html[dir="rtl"] #outerContainer.sidebarOpen #sidebarContainer {
    right: 0;
  }
  
  #mainContainer {
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    min-width: 320px;
  }

  #sidebarContent {
    top: 32px;
    bottom: 0;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    position: absolute;
    width: 100%;
  }

  html[dir="rtl"] #sidebarContent {
    right: 0;
    box-shadow: inset 1px 0 0 rgba(0, 0, 0, 0.25);
  }

  #viewerContainer {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    position: absolute;
    top: 32px;
    right: 0;
    bottom: 0;
    left: 0;
    outline: none;
  }

  #outerContainer.sidebarResizing #viewerContainer {
    /* Improve responsiveness and avoid visual glitches when the sidebar is resized. */
    transition-duration: 0s;
  }
  
  html[dir="ltr"]
    #outerContainer.sidebarOpen
    #viewerContainer:not(.pdfPresentationMode) {
    transition-property: left;
    left: var(--sidebar-width);
  }
  html[dir="rtl"]
    #outerContainer.sidebarOpen
    #viewerContainer:not(.pdfPresentationMode) {
    transition-property: right;
    right: var(--sidebar-width);
  }

  .toolbar {
    position: relative;
    left: 0;
    right: 0;
    z-index: 9999;
    cursor: default;
  }
  
  #toolbarContainer {
    width: 100%;
  }
  
  html[dir="rtl"] #toolbarSidebar {
    box-shadow: inset 1px 0 0 rgba(0, 0, 0, 0.25), 0 1px 0 rgba(0, 0, 0, 0.15),
      0 0 1px rgba(0, 0, 0, 0.1);
  }

  html[dir="rtl"] #toolbarSidebar .toolbarButton {
    margin-left: 2px !important;
  }
  
  html[dir="ltr"] #toolbarSidebarRight .toolbarButton {
    margin-right: 3px !important;
  }
  html[dir="rtl"] #toolbarSidebarRight .toolbarButton {
    margin-left: 3px !important;
  }

  #sidebarResizer {
    position: absolute;
    top: 0;
    bottom: 0;
    width: 6px;
    z-index: 200;
    cursor: ew-resize;
  }
  html[dir="ltr"] #sidebarResizer {
    right: -6px;
  }
  html[dir="rtl"] #sidebarResizer {
    left: -6px;
  }
  #loadingBar {
    position: absolute;
    height: 4px;
    background-color: var(--body-bg-color);
    border-bottom: 1px solid var(--toolbar-border-color);
  
    transition-duration: var(--sidebar-transition-duration);
    transition-timing-function: var(--sidebar-transition-timing-function);
  }
  
  html[dir="ltr"] #loadingBar {
    transition-property: left;
    left: 0;
  }
  html[dir="rtl"] #loadingBar {
    transition-property: right;
    right: 0;
  }

  #outerContainer.sidebarResizing #loadingBar {
    /* Improve responsiveness and avoid visual glitches when the sidebar is resized. */
    transition-duration: 0s;
  }
  
  #loadingBar .progress {
    position: absolute;
    top: 0;
    left: 0;
    width: 0%;
    height: 100%;
    overflow: hidden;
    transition: width 200ms;
  }
  
  @-webkit-keyframes progressIndeterminate {
    0% {
      left: -142px;
    }
    100% {
      left: 0;
    }
  }
  
  @keyframes progressIndeterminate {
    0% {
      left: -142px;
    }
    100% {
      left: 0;
    }
  }

  #loadingBar .progress.indeterminate {
    transition: none;
  }
  
  #loadingBar .progress.indeterminate .glimmer {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: calc(100% + 150px);
    -webkit-animation: progressIndeterminate 1s linear infinite;
            animation: progressIndeterminate 1s linear infinite;
  }

  .findbar {
    min-width: 300px;
  }
 
  .findbar.wrapContainers > div {
    clear: both;
  }
  .findbar.wrapContainers > div#findbarMessageContainer {
    height: auto;
  }
  html[dir="ltr"] .findbar {
    left: 64px;
  }
  html[dir="rtl"] .findbar {
    right: 64px;
  }
  
  html[dir="rtl"] .findbar .splitToolbarButton {
    margin-left: 5px;
    margin-right: 0;
  }
  
  html[dir="ltr"] .findbar .splitToolbarButton > .findNext {
    border-bottom-right-radius: 2px;
    border-top-right-radius: 2px;
  }
  html[dir="rtl"] .findbar .splitToolbarButton > .findNext {
    border-bottom-left-radius: 2px;
    border-top-left-radius: 2px;
  }
  
  .findbar input[type="checkbox"] {
    pointer-events: none;
  }
  
  .findbar label {
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
  }

  html[dir="ltr"] #findInput {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }
  html[dir="rtl"] #findInput {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
  #findInput::-moz-placeholder {
    font-style: normal;
  }
  #findInput::placeholder {
    font-style: normal;
  }
  #findInput[data-status="pending"] {
    background-repeat: no-repeat;
    background-position: 98%;
  }
  html[dir="rtl"] #findInput[data-status="pending"] {
    background-position: 3px;
  }
  #findInput[data-status="notFound"] {
    background-color: rgba(255, 102, 102, 1);
  }
  
  .secondaryToolbar {
    padding: 6px 0 10px;
    height: auto;
    z-index: 30000;
  }
  html[dir="ltr"] .secondaryToolbar {
    right: 4px;
  }
  html[dir="rtl"] .secondaryToolbar {
    left: 4px;
  }
    
  #secondaryToolbarButtonContainer.hiddenScrollModeButtons > .scrollModeButtons,
  #secondaryToolbarButtonContainer.hiddenSpreadModeButtons > .spreadModeButtons {
    display: none !important;
  }
  
  .doorHanger,
  .doorHangerRight {
    border-radius: 2px;
  }

  .doorHanger:after,
  .doorHanger:before,
  .doorHangerRight:after {
    bottom: 100%;
    /* border: solid rgba(0, 0, 0, 0); */
    content: " ";
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
  }

  .doorHanger:after,
  .doorHangerRight:after {
    border-width: 8px;
  }

  .doorHanger:before,
  .doorHangerRight:before {
    border-width: 9px;
  }
  
  html[dir="ltr"] .doorHanger:after,
  html[dir="rtl"] .doorHangerRight:after {
    left: 10px;
    margin-left: -8px;
  }
  
  html[dir="ltr"] .doorHanger:before,
  html[dir="rtl"] .doorHangerRight:before {
    left: 10px;
    margin-left: -9px;
  }
  
  html[dir="rtl"] .doorHanger:after,
  html[dir="ltr"] .doorHangerRight:after {
    right: 10px;
    margin-right: -8px;
  }
  
  html[dir="rtl"] .doorHanger:before,
  html[dir="ltr"] .doorHangerRight:before {
    right: 10px;
    margin-right: -9px;
  }
  
  #findResultsCount {
    background-color: rgba(217, 217, 217, 1);
    color: rgba(82, 82, 82, 1);
    text-align: center;
    padding: 4px 5px;
    margin: 5px;
  }
  
  #findMsg {
    color: rgba(251, 0, 0, 1);
  }
  #findMsg:empty {
    display: none;
  }
  
  #toolbarViewerMiddle {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
  }
  
  html[dir="ltr"] #toolbarViewerLeft,
  html[dir="rtl"] #toolbarViewerRight,
  html[dir="ltr"] #toolbarSidebarLeft,
  html[dir="rtl"] #toolbarSidebarRight {
    float: left;
  }
  html[dir="ltr"] #toolbarViewerRight,
  html[dir="rtl"] #toolbarViewerLeft,
  html[dir="ltr"] #toolbarSidebarRight,
  html[dir="rtl"] #toolbarSidebarLeft {
    float: right;
  }
  html[dir="ltr"] #toolbarViewerLeft > *,
  html[dir="ltr"] #toolbarViewerMiddle > *,
  html[dir="ltr"] #toolbarViewerRight > *,
  html[dir="ltr"] #toolbarSidebarLeft *,
  html[dir="ltr"] #toolbarSidebarRight *,
  html[dir="ltr"] .findbar * {
    position: relative;
    float: left;
  }
  html[dir="rtl"] #toolbarViewerLeft > *,
  html[dir="rtl"] #toolbarViewerMiddle > *,
  html[dir="rtl"] #toolbarViewerRight > *,
  html[dir="rtl"] #toolbarSidebarLeft *,
  html[dir="rtl"] #toolbarSidebarRight *,
  html[dir="rtl"] .findbar * {
    position: relative;
    float: right;
  }
  
  .splitToolbarButton {
    margin: 2px 2px 0;
    display: inline-block;
  }
  html[dir="ltr"] .splitToolbarButton > .toolbarButton {
    float: left;
  }
  html[dir="rtl"] .splitToolbarButton > .toolbarButton {
    float: right;
  }
   
  .toolbarButton > span {
    display: inline-block;
    width: 0;
    height: 0;
    overflow: hidden;
  }
  
  .toolbarButton[disabled],
  .secondaryToolbarButton[disabled],
  .overlayButton[disabled] {
    opacity: 0.5;
  }
  
  .splitToolbarButton.toggled .toolbarButton {
    margin: 0;
  }
  
  .splitToolbarButton > .toolbarButton:hover,
  .splitToolbarButton > .toolbarButton:focus,
  .dropdownToolbarButton:hover,
  .toolbarButton.textButton:hover,
  .toolbarButton.textButton:focus {
    z-index: 199;
  }
  .splitToolbarButton > .toolbarButton {
    position: relative;
  }
  html[dir="ltr"] .splitToolbarButton > .toolbarButton:first-child,
  html[dir="rtl"] .splitToolbarButton > .toolbarButton:last-child {
    margin: 0;
  }
  html[dir="ltr"] .splitToolbarButton > .toolbarButton:last-child,
  html[dir="rtl"] .splitToolbarButton > .toolbarButton:first-child {
    margin: 0;
  }
 
  html[dir="ltr"] .splitToolbarButtonSeparator {
    float: left;
  }
  html[dir="rtl"] .splitToolbarButtonSeparator {
    float: right;
  } 

  .toolbarButton,
  .dropdownToolbarButton,
  .secondaryToolbarButton,
  .overlayButton {
    min-width: 16px;
    margin: 2px 1px;
    padding: 2px 6px 0;
    border: none;
    border-radius: 2px;
    font-size: 12px;
    line-height: 14px;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    cursor: default;
    box-sizing: border-box;
  }
  
  html[dir="ltr"] #toolbarViewerLeft > .toolbarButton:first-child,
  html[dir="rtl"] #toolbarViewerRight > .toolbarButton:last-child {
    margin-left: 2px;
  }
  
  html[dir="ltr"] #toolbarViewerRight > .toolbarButton:last-child,
  html[dir="rtl"] #toolbarViewerLeft > .toolbarButton:first-child {
    margin-right: 2px;
  }
  
  .dropdownToolbarButton::after {
    top: 6px;
    pointer-events: none;
  }
  html[dir="ltr"] .dropdownToolbarButton::after {
    right: 7px;
  }
  html[dir="rtl"] .dropdownToolbarButton::after {
    left: 7px;
  }
  html[dir="ltr"] .dropdownToolbarButton > select {
    padding-left: 4px;
  }
  html[dir="rtl"] .dropdownToolbarButton > select {
    padding-right: 4px;
  }
  
  #customScaleOption {
    display: none;
  }
  
  #pageWidthOption {
    border-bottom: 1px rgba(255, 255, 255, 0.5) solid;
  }
  
  .toolbarButtonSpacer {
    width: 30px;
    display: inline-block;
    height: 1px;
  }
  
 
  .toolbarButton::before {
    top: 6px;
    left: 6px;
  }
  
  .secondaryToolbarButton::before {
    top: 5px;
  }
  html[dir="ltr"] .secondaryToolbarButton::before {
    left: 12px;
  }
  html[dir="rtl"] .secondaryToolbarButton::before {
    right: 12px;
  }
  

  html[dir="rtl"] .toolbarButton#sidebarToggle::before {
    transform: scaleX(-1);
  }
  

  html[dir="rtl"] .toolbarButton#secondaryToolbarToggle::before {
    transform: scaleX(-1);
  }
  
  .secondaryToolbarButton.bookmark {
    padding-top: 6px;
    text-decoration: none;
  }
  
  .bookmark[href="#"] {
    opacity: 0.5;
    pointer-events: none;
  }
  
  
  html[dir="rtl"] #viewOutline.toolbarButton::before {
    transform: scaleX(-1);
  }
  
  
  html[dir="rtl"] #currentOutlineItem.toolbarButton::before {
    transform: scaleX(-1);
  }
  
  .toolbarButton.pdfSidebarNotification::after {
    position: absolute;
    display: inline-block;
    top: 1px;
    /* Create a filled circle, with a diameter of 9 pixels, using only CSS: */
    content: "";
    background-color: rgba(112, 219, 85, 1);
    height: 9px;
    width: 9px;
    border-radius: 50%;
  }
  html[dir="ltr"] .toolbarButton.pdfSidebarNotification::after {
    left: 17px;
  }
  html[dir="rtl"] .toolbarButton.pdfSidebarNotification::after {
    right: 17px;
  }
  
  .secondaryToolbarButton {
    position: relative;
    margin: 0;
    padding: 0 0 1px;
    height: auto;
    min-height: 26px;
    width: auto;
    min-width: 100%;
    white-space: normal;
    border-radius: 0;
    box-sizing: border-box;
  }
  html[dir="ltr"] .secondaryToolbarButton {
    padding-left: 36px;
    text-align: left;
  }
  html[dir="rtl"] .secondaryToolbarButton {
    padding-right: 36px;
    text-align: right;
  }
  
  /* html[dir="ltr"] .secondaryToolbarButton > span {
    padding-right: 4px;
  } */

  html[dir="rtl"] .secondaryToolbarButton > span {
    padding-left: 4px;
  }
  
  html[dir="ltr"] .verticalToolbarSeparator {
    margin-left: 2px;
  }
  html[dir="rtl"] .verticalToolbarSeparator {
    margin-right: 2px;
  }
  
  .horizontalToolbarSeparator {
    display: block;
    margin: 6px 0 5px;
    height: 1px;
    width: 100%;
  }
  
  .toolbarField[type="checkbox"] {
    opacity: 0;
    position: absolute !important;
    left: 0;
  }
  
  html[dir="ltr"] .toolbarField[type="checkbox"] {
    margin: 10px 0 3px 7px;
  }
  
  html[dir="rtl"] .toolbarField[type="checkbox"] {
    margin: 10px 7px 3px 0;
  }
  
  .toolbarField.pageNumber.visiblePageIsLoading {
    background-repeat: no-repeat;
    background-position: 3px;
  }
  
  .toolbarField.pageNumber::-webkit-inner-spin-button,
  .toolbarField.pageNumber::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  
  .toolbarField:focus {
    border-color: #0a84ff;
  }
  
  #thumbnailView {
    position: absolute;
    width: calc(100% - 60px);
    top: 0;
    bottom: 0;
    padding: 10px 30px 0;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }
  
  #thumbnailView > a:active,
  #thumbnailView > a:focus {
    outline: 0;
  }
  
  .thumbnail {
    margin: 0 10px 5px;
  }
  html[dir="ltr"] .thumbnail {
    float: left;
  }
  html[dir="rtl"] .thumbnail {
    float: right;
  }
  
  #thumbnailView > a:last-of-type > .thumbnail {
    margin-bottom: 10px;
  }
  
  #thumbnailView > a:last-of-type > .thumbnail:not([data-loaded]) {
    margin-bottom: 9px;
  }
  
  .thumbnail:not([data-loaded]) {
    border: 1px dashed rgba(132, 132, 132, 1);
    margin: -1px 9px 4px;
  }
  
  .thumbnailImage {
    border: 1px solid rgba(0, 0, 0, 0);
    box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.5), 0 2px 8px rgba(0, 0, 0, 0.3);
    opacity: 0.8;
    z-index: 99;
    background-color: rgba(255, 255, 255, 1);
    background-clip: content-box;
  }
  
  .thumbnailSelectionRing {
    border-radius: 2px;
    padding: 7px;
  }
  
  a:focus > .thumbnail > .thumbnailSelectionRing > .thumbnailImage,
  .thumbnail:hover > .thumbnailSelectionRing > .thumbnailImage {
    opacity: 0.9;
  }
  
  a:focus > .thumbnail > .thumbnailSelectionRing,
  .thumbnail:hover > .thumbnailSelectionRing {
    background-clip: padding-box;
    color: rgba(255, 255, 255, 0.9);
  }
  
  .thumbnail.selected > .thumbnailSelectionRing > .thumbnailImage {
    opacity: 1;
  }
  
  .thumbnail.selected > .thumbnailSelectionRing {
    background-clip: padding-box;
    color: rgba(255, 255, 255, 1);
  }
  
  #outlineView,
  #attachmentsView,
  #layersView {
    position: absolute;
    width: calc(100% - 8px);
    top: 0;
    bottom: 0;
    padding: 4px 4px 0;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
  }
  
  html[dir="ltr"] .treeWithDeepNesting > .treeItem,
  html[dir="ltr"] .treeItem > .treeItems {
    margin-left: 20px;
  }
  
  html[dir="rtl"] .treeWithDeepNesting > .treeItem,
  html[dir="rtl"] .treeItem > .treeItems {
    margin-right: 20px;
  }
  
  .treeItem > a {
    text-decoration: none;
    display: inline-block;
    min-width: 95%;
    /* Subtract the right padding (left, in RTL mode) of the container: */
    min-width: calc(100% - 4px);
    height: auto;
    margin-bottom: 1px;
    border-radius: 2px;
    font-size: 13px;
    line-height: 15px;
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
    white-space: normal;
    cursor: pointer;
  }
  html[dir="ltr"] .treeItem > a {
    padding: 2px 0 5px 4px;
  }
  html[dir="rtl"] .treeItem > a {
    padding: 2px 4px 5px 0;
  }
  
  #layersView .treeItem > a > * {
    cursor: pointer;
  }
  html[dir="ltr"] #layersView .treeItem > a > label {
    padding-left: 4px;
  }
  html[dir="rtl"] #layersView .treesItem > a > label {
    padding-right: 4px;
  }
  
  .treeItemToggler {
    position: relative;
    height: 0;
    width: 0;
    color: rgba(255, 255, 255, 0.5);
  }

  html[dir="rtl"] .treeItemToggler.treeItemsHidden::before {
    transform: scaleX(-1);
  }
  .treeItemToggler.treeItemsHidden ~ .treeItems {
    display: none;
  }
  html[dir="ltr"] .treeItemToggler {
    float: left;
  }
  html[dir="rtl"] .treeItemToggler {
    float: right;
  }
  html[dir="ltr"] .treeItemToggler::before {
    right: 4px;
  }
  html[dir="rtl"] .treeItemToggler::before {
    left: 4px;
  }
  
  .treeItemToggler:hover,
  .treeItemToggler:hover + a,
  .treeItemToggler:hover ~ .treeItems,
  .treeItem > a:hover {
    background-clip: padding-box;
    border-radius: 2px;
  }
  
  /* TODO: file FF bug to support ::-moz-selection:window-inactive
     so we can override the opaque grey background when the window is inactive;
     see https://bugzilla.mozilla.org/show_bug.cgi?id=706209 */
  ::-moz-selection {
    background: rgba(0, 0, 255, 0.3);
  }
  ::selection {
    background: rgba(0, 0, 255, 0.3);
  }
  
  #errorWrapper {
    left: 0;
    position: absolute;
    right: 0;
    z-index: 1000;
    padding: 3px 6px;
  }
  
  #errorMessageLeft {
    float: left;
  }
  
  #errorMessageRight {
    float: right;
  }
  
  #errorMoreInfo {
    padding: 3px;
    margin: 3px;
    width: 98%;
  }
  
  .overlayButton {
    width: auto !important;
    margin: 3px 4px 2px !important;
    padding: 2px 11px;
  }
  
  #overlayContainer {
    display: table;
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.2);
    z-index: 40000;
  }
  #overlayContainer > * {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }
  
  #overlayContainer > .container {
    display: table-cell;
    vertical-align: middle;
    text-align: center;
  }
  
  #overlayContainer > .container > .dialog {
    display: inline-block;
    padding: 15px;
    border-spacing: 4px;
    font-size: 12px;
    line-height: 14px;
    border: 1px solid rgba(0, 0, 0, 0.5);
    border-radius: 4px;
    box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);
  }
  
  .dialog > .row {
    display: table-row;
  }
  
  .dialog > .row > * {
    display: table-cell;
  }
  
  .dialog .toolbarField {
    margin: 5px 0;
  }
  
  .dialog .separator {
    display: block;
    margin: 4px 0;
    height: 1px;
    width: 100%;
  }
  
  .dialog .buttonRow {
    text-align: center;
    vertical-align: middle;
  }
  
  .dialog :link {
    color: rgba(255, 255, 255, 1);
  }
  
  #passwordOverlay > .dialog {
    text-align: center;
  }
  #passwordOverlay .toolbarField {
    width: 200px;
  }
  
  #documentPropertiesOverlay > .dialog {
    text-align: left;
  }
  #documentPropertiesOverlay .row > * {
    min-width: 100px;
  }
  html[dir="ltr"] #documentPropertiesOverlay .row > * {
    text-align: left;
  }
  html[dir="rtl"] #documentPropertiesOverlay .row > * {
    text-align: right;
  }
  #documentPropertiesOverlay .row > span {
    width: 125px;
    word-wrap: break-word;
  }
  #documentPropertiesOverlay .row > p {
    max-width: 225px;
    word-wrap: break-word;
  }
  #documentPropertiesOverlay .buttonRow {
    margin-top: 10px;
  }
  
  .clearBoth {
    clear: both;
  }
  
  .fileInput {
    background: rgba(255, 255, 255, 1);
    color: rgba(0, 0, 0, 1);
    margin-top: 5px;
    visibility: hidden;
    position: fixed;
    right: 0;
    top: 0;
  }
  
  #PDFBug {
    background: none repeat scroll 0 0 rgba(255, 255, 255, 1);
    border: 1px solid rgba(102, 102, 102, 1);
    position: fixed;
    top: 32px;
    right: 0;
    bottom: 0;
    font-size: 10px;
    padding: 0;
    width: 300px;
  }
  #PDFBug .controls {
    background: rgba(238, 238, 238, 1);
    border-bottom: 1px solid rgba(102, 102, 102, 1);
    padding: 3px;
  }
  #PDFBug .panels {
    bottom: 0;
    left: 0;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    position: absolute;
    right: 0;
    top: 27px;
  }
  #PDFBug .panels > div {
    padding: 5px;
  }
  #PDFBug button.active {
    font-weight: bold;
  }
  .debuggerShowText {
    background: none repeat scroll 0 0 rgba(255, 255, 0, 1);
    color: rgba(0, 0, 255, 1);
  }
  .debuggerHideText:hover {
    background: none repeat scroll 0 0 rgba(255, 255, 0, 1);
  }
  #PDFBug .stats {
    font-family: courier;
    font-size: 10px;
    white-space: pre;
  }
  #PDFBug .stats .title {
    font-weight: bold;
  }
  #PDFBug table {
    font-size: 10px;
  }
  #PDFBug table.showText {
    border-collapse: collapse;
    text-align: center;
  }
  
  #PDFBug table.showText,
  #PDFBug table.showText tr,
  #PDFBug table.showText td {
    border: 1px solid black;
    padding: 1px;
  }
  #PDFBug table.showText td.advance {
    color: grey;
  }
  
  #viewer.textLayer-visible .textLayer {
    opacity: 1;
  }
  
  #viewer.textLayer-visible .canvasWrapper {
    background-color: rgba(128, 255, 128, 1);
  }
  
  #viewer.textLayer-visible .canvasWrapper canvas {
    mix-blend-mode: screen;
  }
  
  #viewer.textLayer-visible .textLayer span {
    background-color: rgba(255, 255, 0, 0.1);
    color: rgba(0, 0, 0, 1);
    border: solid 1px rgba(255, 0, 0, 0.5);
    box-sizing: border-box;
  }
  
  #viewer.textLayer-hover .textLayer span:hover {
    background-color: rgba(255, 255, 255, 1);
    color: rgba(0, 0, 0, 1);
  }
  
  #viewer.textLayer-shadow .textLayer span {
    background-color: rgba(255, 255, 255, 0.6);
    color: rgba(0, 0, 0, 1);
  }

  @page {
    margin: 0;
  }
  
  #printContainer {
    display: none;
  }
  
  @media print {
    /* General rules for printing. */
    body {
      background: rgba(0, 0, 0, 0) none;
    }
  
    /* Rules for browsers that don't support mozPrintCallback. */
    #sidebarContainer,
    #secondaryToolbar,
    .toolbar,
    #loadingBox,
    #errorWrapper,
    .textLayer,
    .canvasWrapper {
      display: none;
    }
    #viewerContainer {
      overflow: visible;
    }
  
    #mainContainer,
    #viewerContainer,
    .page,
    .page canvas {
      position: static;
      padding: 0;
      margin: 0;
    }
  
    .page {
      float: left;
      display: none;
      border: none;
      box-shadow: none;
      background-clip: content-box;
      background-color: rgba(255, 255, 255, 1);
    }
  
    .page[data-loaded] {
      display: block;
    }
  
    .fileInput {
      display: none;
    }
  
    /* Rules for browsers that support PDF.js printing */
    body[data-pdfjsprinting] #outerContainer {
      display: none;
    }
    body[data-pdfjsprinting] #printContainer {
      display: block;
    }
    #printContainer {
      height: 100%;
    }
    /* wrapper around (scaled) print canvas elements */
    #printContainer > .printedPage {
      page-break-after: always;
      page-break-inside: avoid;
  
      /* The wrapper always cover the whole page. */
      height: 100%;
      width: 100%;
  
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }
  
    #printContainer > .xfaPrintedPage .xfaPage {
      position: absolute;
    }
  
    #printContainer > .xfaPrintedPage {
      page-break-after: always;
      page-break-inside: avoid;
      width: 100%;
      height: 100%;
      position: relative;
    }
  
    #printContainer > .printedPage canvas,
    #printContainer > .printedPage img {
      /* The intrinsic canvas / image size will make sure that we fit the page. */
      max-width: 100%;
      max-height: 100%;
  
      direction: ltr;
      display: block;
    }
  }
  
  .visibleLargeView,
  .visibleMediumView,
  .visibleSmallView {
    display: none;
  }
  
  @media all and (max-width: 900px) {
    #toolbarViewerMiddle {
      display: table;
      margin: auto;
      left: auto;
      position: inherit;
      transform: none;
    }
  }
  
  @media all and (max-width: 840px) {
  
    html[dir="ltr"] #outerContainer.sidebarOpen #viewerContainer {
      left: 0 !important;
    }
    html[dir="rtl"] #outerContainer.sidebarOpen #viewerContainer {
      right: 0 !important;
    }
  
    #outerContainer .hiddenLargeView,
    #outerContainer .hiddenMediumView {
      display: inherit;
    }
    #outerContainer .visibleLargeView,
    #outerContainer .visibleMediumView {
      display: none;
    }
  }
  
  @media all and (max-width: 770px) {
    #outerContainer .hiddenLargeView {
      display: none;
    }
    #outerContainer .visibleLargeView {
      display: inherit;
    }
  }
  
  @media all and (max-width: 700px) {
    #outerContainer .hiddenMediumView {
      display: none;
    }
    #outerContainer .visibleMediumView {
      display: inherit;
    }
  }
  
  @media all and (max-width: 640px) {
    .hiddenSmallView,
    .hiddenSmallView * {
      display: none;
    }
    .visibleSmallView {
      display: inherit;
    }
    .toolbarButtonSpacer {
      width: 0;
    }
    html[dir="ltr"] .findbar {
      left: 34px;
    }
    html[dir="rtl"] .findbar {
      right: 34px;
    }
  }
  
  @media all and (max-width: 535px) {
    #scaleSelectContainer {
      display: none;
    }
  }

  body.toolbar-top-center div#secondaryToolbar, body.toolbar-bottom-center div#secondaryToolbar{
    margin: 0;
  }
  body.toolbar-top-center div#secondaryToolbar:before, body.toolbar-bottom-center div#secondaryToolbar:before{
    display: none;
  }